!function(){"use strict";class e{constructor(e){let{data:t,cardSelector:s,handleCardClick:n,currentId:r,handleTrashButton:o,handleLikeButton:i}=e;this.data=t,this._likes=t.likes,this._cardSelector=s,this._handleCardClick=n,this._handleTrashButton=o,this._currentId=r,this._handleLikeButton=i}_getTemplate(){return document.querySelector("#elements-template").content.querySelector(".elements__photo").cloneNode(!0)}_renderLikes(){this._likeCount.textContent=this._likes.length,this.isLiked()?this._buttonLike.classList.add("elements__info-button_active"):this._buttonLike.classList.remove("elements__info-button_active")}updateLikes(e){this._likes=e.likes,this._renderLikes()}isLiked(){return this._likes.find((e=>e._id===this._currentId))}generateCard(){this._element=this._getTemplate(),this._buttonLike=this._element.querySelector(".elements__info-button"),this._likeCount=this._element.querySelector(".elements__counter"),this._renderLikes();const e=this._element.querySelector(".elements__pic");return e.src=this.data.link,e.alt=this.data.name,this._element.querySelector(".elements__info-text").textContent=this.data.name,this.data.owner._id!==this._currentId&&this._element.querySelector(".elements__delete").classList.add("elements__delete_hidden"),this._setEventListeners(),this._element}removeCard(){this._element.remove()}_setEventListeners(){this._element.querySelector(".elements__info-button").addEventListener("click",(()=>{this._handleLikeButton()})),this._element.querySelector(".elements__delete").addEventListener("click",(()=>{this._handleTrashButton()})),this._element.querySelector(".elements__pic").addEventListener("click",(()=>{this._handleCardClick({title:this.data.name,url:this.data.link})}))}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formSelector=e.formSelector,this._element=document.querySelector(t),this._inputList=[...this._element.querySelectorAll(this._inputSelector)],this._button=this._element.querySelector(this._submitButtonSelector)}_hasInvalidInput(e){return!e.validity.valid}_showInputError(e){const t=document.querySelector("#".concat(e.id,"-error"));t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage}_hideInputError(e){const t=document.querySelector("#".concat(e.id,"-error"));t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass),t.textContent=""}_validateFormField(e){this._hasInvalidInput(e)?this._showInputError(e):this._hideInputError(e)}_toggleButtonState(e,t){t.disabled=e.some(this._hasInvalidInput)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._validateFormField(e),this._toggleButtonState(this._inputList,this._button)}))}))}resetValidation(){this._element.reset(),this._toggleButtonState(this._inputList,this._button)}enableValidation(){this._element.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){var t,s;s=e=>{"Escape"===e.key&&this.close()},(t="_handleEscClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popupSelector=document.querySelector(e),this._buttonSelector=this._popupSelector.querySelector(".popup__close")}open(){this._popupSelector.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupSelector.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){document.addEventListener("mousedown",(e=>{e.target.classList.contains("popup_open")&&this.close()})),this._buttonSelector.addEventListener("click",(e=>{e.preventDefault(),this.close()}))}}class n extends s{constructor(e,t){let{handleSubmit:s}=t;super(e),this._handleSubmit=s,this._popupWithForm=this._popupSelector.querySelector(".popup__form")}_getInputValues(){const e=this._popupWithForm.querySelectorAll(".popup__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupWithForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues())}))}}const r={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input-error",errorClass:"popup__error_active"},o="#add-popup",i="#edit-popupPicture",l="#delete-popup",a=document.querySelector(".popup__submit_type_delete");function c(e,t){document.querySelector("".concat(e," ").concat(r.submitButtonSelector)).textContent=t?"Loading...":"Save"}const u=".popup_type-edit_profile",h=document.querySelector(".popup__input_type_name"),d=document.querySelector(".popup__input_type_description"),_=(document.querySelector("#title"),document.querySelector("#url"),document.querySelectorAll(".popup__close"),document.querySelector(".profile__edit")),p=document.querySelector(".profile__change-photo"),m=document.querySelector(".profile__plus"),S=(document.querySelector(".profile__avatar-pic"),document.querySelector(".profile__name"),document.querySelector(".profile__text"),new s(o));S.setEventListeners();const v=new s(i);v.setEventListeners();const f=new s(l);f.setEventListeners();const b=new class extends s{constructor(e){super(e),this._image=this._popupSelector.querySelector(".popup__image"),this._caption=this._popupSelector.querySelector(".popup__caption")}open(e){this._image.src=e.url,this._image.alt=e.title,this._caption.textContent=e.title,super.open()}}("#photo"),L=new s(u);L.setEventListeners();const E=new n(o,{handleSubmit:e=>{c(o,!0),C.addNewCard(e).then((e=>{q.addItem(g(e)),E.close()})).catch((e=>{console.log(e)})).finally((()=>{c(o,!1)}))}});E.setEventListeners();const y=new n(i,{handleSubmit:e=>{c(i,!0),C.editProfilePic(e).then((e=>{let{avatar:t}=e;w.setAvatar(t),y.close(),U.resetValidation()})).catch((e=>{console.log(e)})).finally((()=>{c(i,!1)}))}});y.setEventListeners();const C=new class{constructor(e){let{baseUrl:t,headers:s}=e;this.baseUrl=t,this.headers=s}getUserInfo(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then(this._handleServerResponse)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then(this._handleServerResponse)}_handleServerResponse(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}setUserProfile(e){let{name:t,about:s}=e;return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:t,about:s})}).then(this._handleServerResponse)}addNewCard(e){let{name:t,link:s}=e;return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:t,link:s})}).then(this._handleServerResponse)}deleteCard(e){let{id:t}=e;return fetch("".concat(this.baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this.headers}).then(this._handleServerResponse)}handleLikePhoto(e,t){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:t?"DELETE":"PUT",headers:this.headers}).then(this._handleServerResponse)}editProfilePic(e){let{avatar:t}=e;return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:t})}).then(this._handleServerResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"b240a05b-bedc-4219-9e26-b0942ecb0fb0","Content-Type":"application/json"}});let k=null;C.getAppInfo().then((e=>{let[t,s]=e;k=s._id,w.setUserInfo(s),t.forEach((e=>{q.addItem(g(e))}))})).catch((e=>{console.log(e)}));const g=t=>{const s=new e({data:t,cardSelector:"#elements-template",handleCardClick:P,currentId:k,handleTrashButton:()=>{f.open(),a.addEventListener("click",(()=>{c(l,!0),C.deleteCard({id:t._id}).then((()=>{s.removeCard(),f.close()})).catch((e=>{console.log(e)})).finally((()=>{c(l,!1)}))}))},handleLikeButton:()=>{C.handleLikePhoto(t._id,s.isLiked()).then((e=>{s.updateLikes(e)})).catch((e=>{console.log(e)}))}});return s.generateCard()},q=new class{constructor(e){this._containerElement=document.querySelector(e)}addItem(e){this._containerElement.prepend(e)}}(".elements"),I=new n(u,{handleSubmit:e=>{c(u,!0),C.setUserProfile(e).then((e=>{w.setUserInfo(e),I.close()})).catch((e=>{console.log(e)})).finally((()=>{c(u,!1)}))}});I.setEventListeners();const w=new class{constructor(e){let{profileName:t,profileText:s,profilePhoto:n}=e;this._userNameElement=document.querySelector(t),this._userJobElement=document.querySelector(s),this._userPhoto=document.querySelector(n)}getUserInfo(){return{userName:this._userNameElement.textContent,userDescription:this._userJobElement.textContent,id:this._userId}}setUserInfo(e){let{avatar:t,name:s,about:n,id:r}=e;this._userNameElement.textContent=s,this._userJobElement.textContent=n,this._userPhoto.src=t,this._userId=r}setAvatar(e){this._userPhoto.src=e}}({profileName:".profile__name",profileText:".profile__text",profilePhoto:".profile__avatar-pic"});function P(e){b.open(e)}_.addEventListener("click",(()=>{const e=w.getUserInfo();h.value=e.userName,d.value=e.userDescription,L.open()})),p.addEventListener("click",(()=>{v.open()})),b.setEventListeners();const U=new t(r,"#add-profile"),B=new t(r,"#add-form"),x=new t(r,"#profile-form");m.addEventListener("click",(()=>{B.resetValidation(),S.open()})),x.enableValidation(),B.enableValidation(),U.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,