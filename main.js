!function(){"use strict";class e{constructor(e,t,s){this.data=e,this._cardSelector=t,this._handleCardClick=s}_getTemplate(){return document.querySelector("#elements-template").content.querySelector(".elements__photo").cloneNode(!0)}generateCard(){this._element=this._getTemplate();const e=this._element.querySelector(".elements__pic");return e.src=this.data.link,e.alt=this.data.name,this._element.querySelector(".elements__info-text").textContent=this.data.name,this._setEventListeners(),this._element}_setEventListeners(){this._element.querySelector(".elements__info-button").addEventListener("click",(e=>{e.target.classList.toggle("elements__info-button_active")})),this._element.querySelector(".elements__delete").addEventListener("click",(()=>{this._element.remove()})),this._element.querySelector(".elements__pic").addEventListener("click",(()=>{this._handleCardClick({title:this.data.name,url:this.data.link})}))}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formSelector=e.formSelector,this._element=document.querySelector(t),this._inputList=[...this._element.querySelectorAll(this._inputSelector)],this._button=this._element.querySelector(this._submitButtonSelector)}_hasInvalidInput(e){return!e.validity.valid}_showInputError(e){const t=document.querySelector("#".concat(e.id,"-error"));t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage}_hideInputError(e){const t=document.querySelector("#".concat(e.id,"-error"));t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass),t.textContent=""}_validateFormField(e){this._hasInvalidInput(e)?this._showInputError(e):this._hideInputError(e)}_toggleButtonState(e,t){t.disabled=e.some(this._hasInvalidInput)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._validateFormField(e),this._toggleButtonState(this._inputList,this._button)}))}))}resetValidation(){this._element.reset(),this._toggleButtonState(this._inputList,this._button)}enableValidation(){this._element.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e,t){var s,n;n=e=>{"Escape"===e.key&&this.close()},(s="_handleEscClose")in this?Object.defineProperty(this,s,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[s]=n,this._popupSelector=document.querySelector(e),this._buttonSelector=this._popupSelector.querySelector(".popup__close")}open(){this._popupSelector.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupSelector.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){document.addEventListener("mousedown",(e=>{e.target.classList.contains("popup_open")&&this.close()})),this._buttonSelector.addEventListener("click",(e=>{e.preventDefault(),this.close()}))}}class n extends s{constructor(e,t){let{handleSubmit:s}=t;super(e),this._handleSubmit=s,this._popupWithForm=this._popupSelector.querySelector(".popup__form")}_getInputValues(){const e=this._popupWithForm.querySelectorAll(".popup__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupWithForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues()),this.close()}))}}const r={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input-error",errorClass:"popup__error_active"},o="#add-popup",i=".popup_type-edit_profile",a=document.querySelector(".popup__input_type_name"),l=document.querySelector(".popup__input_type_description"),c=(document.querySelector("#title"),document.querySelector("#url"),document.querySelectorAll(".popup__close"),document.querySelector(".profile__edit")),u=document.querySelector(".profile__plus"),p=new s(o);p.setEventListeners();const h=new class extends s{constructor(e){super(e),this._image=this._popupSelector.querySelector(".popup__image"),this._caption=this._popupSelector.querySelector(".popup__caption")}open(e){this._image.src=e.url,this._image.alt=e.title,this._caption.textContent=e.title,super.open()}}("#photo"),d=new s(i);d.setEventListeners(),new n(o,{handleSubmit:t=>{_.addNewCard(t).then((t=>{const s=new e(t,"#elements-template",S).generateCard();m.addItem(s)}))}}).setEventListeners();const _=new class{constructor(e){let{baseUrl:t,headers:s}=e;this.baseUrl=t,this.headers=s}getInitialCards(){return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then(this._handleServerResponde)}_handleServerResponde(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}setUserProfile(e,t){fetch("https://around.nomoreparties.co/v1/group-12/users/me",{method:"PATCH",headers:{authorization:"b240a05b-bedc-4219-9e26-b0942ecb0fb0","Content-Type":"application/json"},body:JSON.stringify({name:e,link:t})})}addNewCard(e){let{name:t,link:s}=e;return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:t,link:s})}).then(this._handleServerResponse)}likePhoto(){fetch("https://around.nomoreparties.co/v1/group-12/users/me",{method:"PATCH",headers:{authorization:"b240a05b-bedc-4219-9e26-b0942ecb0fb0","Content-Type":"application/json"}})}removeLike(){fetch("https://around.nomoreparties.co/v1/group-12/users/me",{method:"PATCH",headers:{authorization:"b240a05b-bedc-4219-9e26-b0942ecb0fb0","Content-Type":"application/json"}})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"b240a05b-bedc-4219-9e26-b0942ecb0fb0","Content-Type":"application/json"}});_.getInitialCards().then((t=>{t.forEach((t=>{const s=new e(t,"#elements-template",S).generateCard();m.addItem(s)}))}));const m=new class{constructor(e){this._containerElement=document.querySelector(e)}addItem(e){this._containerElement.prepend(e)}}(".elements");new n(i,{handleSubmit:e=>{b.setUserInfo(e)}}).setEventListeners();const b=new class{constructor(e){let{profileName:t,profileText:s}=e;this._userNameElement=document.querySelector(t),this._userJobElement=document.querySelector(s)}getUserInfo(){return{userName:this._userNameElement.textContent,userDescription:this._userJobElement.textContent}}setUserInfo(e){let{name:t,description:s}=e;this._userNameElement.textContent=t,this._userJobElement.textContent=s}}({profileName:".profile__name",profileText:".profile__text"});function S(e){h.open(e)}c.addEventListener("click",(()=>{const e=b.getUserInfo();a.value=e.userName,l.value=e.userDescription,d.open()})),h.setEventListeners();const v=new t(r,"#add-form"),E=new t(r,"#profile-form");u.addEventListener("click",(()=>{v.resetValidation(),p.open()})),E.enableValidation(),v.enableValidation(),_.getInitialCards()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,