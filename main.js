!function(){"use strict";class e{constructor(e,t,s){this._title=e.title,this._image=e.url,this._cardSelector=t,this._handleCardClick=s}_getTemplate(){return document.querySelector("#elements-template").content.querySelector(".elements__photo").cloneNode(!0)}generateCard(){this._element=this._getTemplate();const e=this._element.querySelector(".elements__pic");return e.src=this._image,e.alt=this._title,this._element.querySelector(".elements__info-text").textContent=this._title,this._setEventListeners(),this._element}_setEventListeners(){this._element.querySelector(".elements__info-button").addEventListener("click",(e=>{e.target.classList.toggle("elements__info-button_active")})),this._element.querySelector(".elements__delete").addEventListener("click",(()=>{this._element.remove()})),this._element.querySelector(".elements__pic").addEventListener("click",(()=>{this._handleCardClick({title:this._title,url:this._image})}))}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formSelector=e.formSelector,this._element=document.querySelector(t),this._inputList=[...this._element.querySelectorAll(this._inputSelector)],this._button=this._element.querySelector(this._submitButtonSelector)}_hasInvalidInput(e){return!e.validity.valid}_showInputError(e){const t=document.querySelector("#".concat(e.id,"-error"));t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage}_hideInputError(e){const t=document.querySelector("#".concat(e.id,"-error"));t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass),t.textContent=""}_validateFormField(e){this._hasInvalidInput(e)?this._showInputError(e):this._hideInputError(e)}_toggleButtonState(e,t){t.disabled=e.some(this._hasInvalidInput)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._validateFormField(e),this._toggleButtonState(this._inputList,this._button)}))}))}resetValidation(){this._element.reset(),this._toggleButtonState(this._inputList,this._button)}enableValidation(){this._element.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e,t){var s,n;n=e=>{"Escape"===e.key&&this.close()},(s="_handleEscClose")in this?Object.defineProperty(this,s,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[s]=n,this._popupSelector=document.querySelector(e),this._buttonSelector=this._popupSelector.querySelector(".popup__close")}open(){this._popupSelector.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupSelector.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){document.addEventListener("mousedown",(e=>{e.target.classList.contains("popup_open")&&this.close()})),this._buttonSelector.addEventListener("click",(e=>{e.preventDefault(),this.close()}))}}class n extends s{constructor(e,t){let{handleSubmit:s}=t;super(e),this._handleSubmit=s,this._popupWithForm=this._popupSelector.querySelector(".popup__form")}_getInputValues(){const e=this._popupWithForm.querySelectorAll(".popup__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupWithForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues()),this.close()}))}}const r={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input-error",errorClass:"popup__error_active"},o="#add-popup",i=".popup_type-edit_profile",l=document.querySelector(".popup__input_type_name"),u=document.querySelector(".popup__input_type_description"),c=document.querySelector("#title"),a=document.querySelector("#url"),p=(document.querySelectorAll(".popup__close"),document.querySelector(".profile__edit")),_=document.querySelector(".profile__plus"),d=new s(o);d.setEventListeners(),_.addEventListener("click",(()=>{f.resetValidation(),d.open()}));const h=new s(i);function m(t,s){const n=new e(t,"#elements-template",y).generateCard();s.addItem(n)}h.setEventListeners(),new n(o,{handleSubmit:()=>{m({url:a.value,title:c.value},E)}}).setEventListeners(),new n(i,{handleSubmit:e=>{S.setUserInfo(e)}}).setEventListeners();const S=new class{constructor(e){let{profileName:t,profileText:s}=e;this._userNameElement=document.querySelector(t),this._userJobElement=document.querySelector(s)}getUserInfo(){return{userName:this._userNameElement.textContent,userDescription:this._userJobElement.textContent}}setUserInfo(e){let{name:t,description:s}=e;this._userNameElement.textContent=t,this._userJobElement.textContent=s}}({profileName:".profile__name",profileText:".profile__text"});p.addEventListener("click",(()=>{const e=S.getUserInfo();l.value=e.userName,u.value=e.userDescription,h.open()}));const v=new class extends s{constructor(e){super(e),this._image=this._popupSelector.querySelector(".popup__image"),this._caption=this._popupSelector.querySelector(".popup__caption")}open(e){this._image.src=e.url,this._image.alt=e.title,this._caption.textContent=e.title,super.open()}}("#photo"),E=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._containerElement=document.querySelector(t)}renderer(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._containerElement.prepend(e)}}({items:[{title:"Yosemite Valley",url:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{title:"Lake Louise",url:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{title:"Lago di Braies",url:"https://code.s3.yandex.net/web-code/lago.jpg"},{title:"Latemar",url:"https://code.s3.yandex.net/web-code/latemar.jpg"},{title:"Vanoise National Park",url:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{title:"Rio de Janeiro",url:"https://images.unsplash.com/photo-1544989164-31dc3c645987?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=735&q=80"}],renderer:e=>{m(e,E)}},".elements");function y(e){v.open(e)}E.renderer(),v.setEventListeners();const f=new t(r,"#add-form");new t(r,"#profile-form").enableValidation(),f.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,